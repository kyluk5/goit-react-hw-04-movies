{"version":3,"sources":["helpers/rejuest.js","components/FilmItem/Back_Arrow.png","components/FilmItem/FilmItem.js"],"names":["popularFilms","axios","get","process","showAllInfo","id","viewCredits","getReview","searchFilm","string","module","exports","Cast","lazy","Reviews","FilmItem","match","params","movieId","useState","film","setFilm","search","setSearch","from","setFrom","location","useLocation","history","useHistory","useEffect","then","data","state","src","arrow","alt","className","onClick","push","pathname","poster_path","original_title","popularity","overview","genres","map","item","key","name","to","fallback","path","render","props"],"mappings":"yIAAA,+LAEaA,EAAe,WAC1B,OAAOC,IAAMC,IAAN,oEAEiDC,sCAI7CC,EAAc,SAACC,GAC1B,OAAOJ,IAAMC,IAAN,6CACiCG,EADjC,oBAC+CF,mCAD/C,qBAKIG,EAAc,SAACD,GAC1B,OAAOJ,IAAMC,IAAN,6CACiCG,EADjC,uDAKIE,EAAY,SAACF,GACxB,OAAOJ,IAAMC,IAAN,6CACiCG,EADjC,4BACuDF,mCADvD,4BAKIK,EAAa,SAACC,GACzB,OAAOR,IAAMC,IAAN,4DACgDC,mCADhD,iCACkGM,EADlG,kC,mBC5BTC,EAAOC,QAAU,IAA0B,wC,+HCYrCC,G,MAAOC,gBAAK,kBAAM,iCAClBC,EAAUD,gBAAK,kBACnB,gCAiFaE,UA9EE,SAAC,GAAe,IACzBV,EADwB,EAAZW,MACDC,OAAOC,QADM,EAENC,mBAAS,IAFH,mBAEvBC,EAFuB,KAEjBC,EAFiB,OAGFF,mBAAS,IAHP,mBAGvBG,EAHuB,KAGfC,EAHe,OAINJ,mBAAS,IAJH,mBAIvBK,EAJuB,KAIjBC,EAJiB,KAKxBC,EAAWC,cACXC,EAAUC,cAEhBC,qBAAU,WACR1B,YAAYC,GAAI0B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcX,EAAQW,MACvCN,EAASO,QACXV,EAAUG,EAASO,MAAMX,QACzBG,EAAQC,EAASO,MAAMT,SAExB,CAACnB,EAAIqB,IAYR,OACE,oCACE,yBAAKQ,IAAKC,IAAOC,IAAI,aAAaC,UAAU,OAAOC,QAZpC,WACjBV,EAAQW,KAAK,CACXC,SAAUhB,EACVF,OAAO,SAAD,OAAWA,GACjBW,MAAO,CACLX,eASF,yBAAKe,UAAU,aACZjB,EAAKqB,aACJ,yBACEP,IAAG,6CAAwCd,EAAKqB,aAChDL,IAAKhB,EAAKsB,eACVL,UAAU,aAGd,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAASjB,EAAKsB,gBAC5B,gDAAkBtB,EAAKuB,aACvB,wCACA,uBAAGN,UAAU,YAAYjB,EAAKwB,UAC9B,sCACA,4BACGxB,EAAKyB,QACJzB,EAAKyB,OAAOC,KAAI,SAACC,GAAD,OAAU,wBAAIC,IAAKD,EAAK1C,IAAK0C,EAAKE,UAEtD,8BAGJ,yBAAKZ,UAAU,yBACb,uBAAGA,UAAU,mBAAb,0BACA,4BACE,4BACE,kBAAC,IAAD,CAASa,GAAE,kBAAa7C,EAAb,UAAX,SAEF,4BACE,kBAAC,IAAD,CAAS6C,GAAE,kBAAa7C,EAAb,aAAX,cAIN,kBAAC,WAAD,CAAU8C,SAAU,2CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,wBACLC,OAAQ,SAACC,GAAD,OAAW,kBAAC1C,EAAD,iBAAU0C,EAAV,CAAiBjD,GAAIA,QAE1C,kBAAC,IAAD,CACE+C,KAAK,2BACLC,OAAQ,SAACC,GAAD,OAAW,kBAACxC,EAAD,iBAAawC,EAAb,CAAoBjD,GAAIA","file":"static/js/FilmItem.166d842e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const popularFilms = () => {\n  return axios.get(\n    `\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=${process.env.REACT_APP_KEY}`\n  );\n};\n\nexport const showAllInfo = (id) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_KEY}&language=en-US`\n  );\n};\n\nexport const viewCredits = (id) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=a71ee21a323f0746cf52494ffbbd4ef9`\n  );\n};\n\nexport const getReview = (id) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const searchFilm = (string) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_KEY}&language=en-US&query=${string}&page=1&include_adult=false`\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/Back_Arrow.81a49b03.png\";","import React, { useEffect, useState, lazy, Suspense } from \"react\";\nimport { showAllInfo } from \"../../helpers/rejuest\";\nimport {\n  NavLink,\n  Switch,\n  Route,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport arrow from \"./Back_Arrow.png\";\nimport \"./FilmItem.css\";\n\nconst Cast = lazy(() => import(\"../Cast/Cast\" /* webpackChunkName: \"Cast\" */));\nconst Reviews = lazy(() =>\n  import(\"../Reviews/Reviews\" /* webpackChunkName: \"Reviews\" */)\n);\n\nconst FilmItem = ({ match }) => {\n  const id = match.params.movieId;\n  const [film, setFilm] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [from, setFrom] = useState(\"\");\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    showAllInfo(id).then(({ data }) => setFilm(data));\n    if (location.state) {\n      setSearch(location.state.search);\n      setFrom(location.state.from);\n    }\n  }, [id, location]);\n\n  const changePage = () => {\n    history.push({\n      pathname: from,\n      search: `query=${search}`,\n      state: {\n        search,\n      },\n    });\n  };\n\n  return (\n    <>\n      <img src={arrow} alt=\"arrow_back\" className=\"back\" onClick={changePage} />\n\n      <div className=\"full_info\">\n        {film.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/original${film.poster_path}`}\n            alt={film.original_title}\n            className=\"film_img\"\n          />\n        )}\n        <div className=\"item_info\">\n          <h2 className=\"title\">{film.original_title}</h2>\n          <p>{`Popularitu ${film.popularity}`}</p>\n          <h3>Overview</h3>\n          <p className=\"overview\">{film.overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {film.genres &&\n              film.genres.map((item) => <li key={item.id}>{item.name}</li>)}\n          </ul>\n          <p></p>\n        </div>\n      </div>\n      <div className=\"aditional_information\">\n        <p className=\"aditional_title\"> Aditional Information</p>\n        <ul>\n          <li>\n            <NavLink to={`/movies/${id}/cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`/movies/${id}/reviews`}>Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<h1>Loadind...</h1>}>\n        <Switch>\n          <Route\n            path=\"/movies/:movieId/cast\"\n            render={(props) => <Cast {...props} id={id} />}\n          />\n          <Route\n            path=\"/movies/:movieId/reviews\"\n            render={(props) => <Reviews {...props} id={id} />}\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default FilmItem;\n"],"sourceRoot":""}