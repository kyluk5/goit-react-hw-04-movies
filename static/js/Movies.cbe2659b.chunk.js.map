{"version":3,"sources":["helpers/rejuest.js","components/FilmList/FilmList.js","containers/Movies/Movies.js"],"names":["popularFilms","axios","get","process","showAllInfo","id","viewCredits","getReview","searchFilm","string","FilmList","films","query","className","map","item","key","to","pathname","state","from","search","title","Movies","useState","setSearch","result","setResult","history","useHistory","location","useLocation","useEffect","then","arr","data","results","onSubmit","e","preventDefault","push","type","autoComplete","autoFocus","placeholder","value","onChange","target"],"mappings":"yIAAA,+LAEaA,EAAe,WAC1B,OAAOC,IAAMC,IAAN,oEAEiDC,sCAI7CC,EAAc,SAACC,GAC1B,OAAOJ,IAAMC,IAAN,6CACiCG,EADjC,oBAC+CF,mCAD/C,qBAKIG,EAAc,SAACD,GAC1B,OAAOJ,IAAMC,IAAN,6CACiCG,EADjC,uDAKIE,EAAY,SAACF,GACxB,OAAOJ,IAAMC,IAAN,6CACiCG,EADjC,4BACuDF,mCADvD,4BAKIK,EAAa,SAACC,GACzB,OAAOR,IAAMC,IAAN,4DACgDC,mCADhD,iCACkGM,EADlG,kC,gCC5BT,iCA8BeC,IA1BE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAwB,IAAjBC,aAAiB,MAAT,GAAS,EAC1C,OACE,oCACE,wBAAIC,UAAU,cAAd,eACA,wBAAIA,UAAU,aACXF,EAAMG,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKV,GAAIQ,UAAU,aAC1B,kBAAC,IAAD,CACEI,GAAI,CACFC,SAAS,UAAD,OAAYH,EAAKV,IACzBc,MAAO,CACLC,KAAK,UACLC,OAAQT,IAGZC,UAAU,aAETE,EAAKO,e,0IC0CLC,UAzDA,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACZH,EADY,KACJI,EADI,OAESD,mBAAS,IAFlB,mBAEZE,EAFY,KAEJC,EAFI,KAGbC,EAAUC,cACVC,EAAWC,cAKjBC,qBAAU,WACJF,EAASX,QACXM,EAAUK,EAASX,MAAME,QAEzBb,YAAWa,GAAQY,MAAK,YAAe,IAC/BC,EAD8B,EAAXC,KACRC,QACjBT,EAAUO,SAGb,CAACJ,EAAUT,IAed,OACE,oCACE,yBAAKR,UAAU,aACb,0BAAMA,UAAU,aAAawB,SAhBnB,SAACC,GACfA,EAAEC,iBACF/B,YAAWa,GAAQY,MAAK,YAAe,IAC/BC,EAD8B,EAAXC,KACRC,QACjBT,EAAUO,MAGZN,EAAQY,KAAK,CACXtB,SAAS,UACTG,OAAO,SAAD,OAAWA,OAQb,4BAAQoB,KAAK,SAAS5B,UAAU,qBAC9B,0BAAMA,UAAU,2BAAhB,WAGF,2BACEA,UAAU,mBACV4B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAOxB,EACPyB,SA3CU,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBtB,EAAUsB,EAAOF,YA8Cf,kBAAC,IAAD,CAAUlC,MAAOe,EAAQd,MAAOS","file":"static/js/Movies.cbe2659b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const popularFilms = () => {\n  return axios.get(\n    `\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=${process.env.REACT_APP_KEY}`\n  );\n};\n\nexport const showAllInfo = (id) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_KEY}&language=en-US`\n  );\n};\n\nexport const viewCredits = (id) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=a71ee21a323f0746cf52494ffbbd4ef9`\n  );\n};\n\nexport const getReview = (id) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const searchFilm = (string) => {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_KEY}&language=en-US&query=${string}&page=1&include_adult=false`\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./FilmList.css\";\n\nconst FilmList = ({ films, query = \"\" }) => {\n  return (\n    <>\n      <h1 className=\"list_title\">Search List</h1>\n      <ul className=\"film_list\">\n        {films.map((item) => (\n          <li key={item.id} className=\"film_item\">\n            <NavLink\n              to={{\n                pathname: `movies/${item.id}`,\n                state: {\n                  from: `/movies`,\n                  search: query,\n                },\n              }}\n              className=\"film_link\"\n            >\n              {item.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default FilmList;\n","import React, { useState, useEffect } from \"react\";\nimport { searchFilm } from \"../../helpers/rejuest\";\nimport FilmList from \"../../components/FilmList/FilmList\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport \"./Movies.css\";\n\nconst Movies = () => {\n  const [search, setSearch] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n  const searchValue = ({ target }) => {\n    setSearch(target.value);\n  };\n\n  useEffect(() => {\n    if (location.state) {\n      setSearch(location.state.search);\n\n      searchFilm(search).then(({ data }) => {\n        const arr = data.results;\n        setResult(arr);\n      });\n    }\n  }, [location, search]);\n\n  const subForm = (e) => {\n    e.preventDefault();\n    searchFilm(search).then(({ data }) => {\n      const arr = data.results;\n      setResult(arr);\n    });\n    // setSearch(\"\");\n    history.push({\n      pathname: `/movies`,\n      search: `query=${search}`,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={subForm}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            value={search}\n            onChange={searchValue}\n          />\n        </form>\n      </div>\n      <FilmList films={result} query={search} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"sourceRoot":""}